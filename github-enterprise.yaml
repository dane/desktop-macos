- hosts: localhost
  gather_facts: false
  vars_prompt:
    - name: github_hostname 
      prompt: What is your GitHub Enterprise hostname?
      private: no 
    - name: username
      prompt: What is your Git user.name?
      private: no 
    - name: email
      prompt: What is your Git user.email?
      private: no
    - name: github_token
      prompt: What is your GitHub Enterprise CLI token?
      private: yes
    - name: gpg_passphrase
      prompt: What is your GPG key passphrase?
      private: yes
  tasks:
    - name: Create GitHub Enterprise git config file
      command: touch ~/.local/git/config.enterprise
    - name: Record .local/git/config.enterprise
      command: cat ~/.local/git/config.enterprise
      register: gitconfig
    - name: Set Git user.name
      command: git config -f ~/.local/git/config.enterprise user.name "{{ username }}"
      when: gitconfig.stdout.find("name = ") == 0 
    - name: Set Git user.email
      command: git config -f ~/.local/git/config.enterprise user.email "{{ email }}"
      when: gitconfig.stdout.find("email = ") == 0
    - name: Generate GPG key
      command: gpg --full-generate-key --batch
      args:
        stdin: |-
          Key-Type: eddsa
          Key-Curve: ed25519
          Name-Real: {{ username }}
          Name-Comment: GitHub Enterprise commit signing
          Name-Email: {{ email }}
          Expire-Date: 0
          Passphrase: {{ gpg_passphrase }}
    - name: Get GPG key list
      command: gpg --list-secret-keys --keyid-format=long --with-colons
      register: gpg_key_list
    - name: Select GitHub Enterprise key
      register: gpg_github_enterprise_key
      command: grep -B 3 "GitHub Enterprise"
      args:
        stdin: "{{ gpg_key_list.stdout }}"
    - name: Select sec line
      register: gpg_key_sec_line
      command: grep 'sec:'
      args:
        stdin: "{{ gpg_github_enterprise_key.stdout }}"
    - name: Get GPG key sec value
      register: gpg_key_sec_value
      command: "awk -F: '{print $5}'"
      args:
        stdin: "{{ gpg_key_sec_line.stdout }}"
    - name: GPG public key
      register: gpg_public_key
      command: "gpg --armor --export {{ gpg_key_sec_value.stdout }}"
    - name: Set GPG key on git commits
      command: git config -f ~/.local/git/config.enterprise user.signingkey {{ gpg_key_sec_value.stdout }}
    - name: Set Git commit.gpgsign
      command: git config -f ~/.local/git/config.enterprise commit.gpgsign true
    - name: Login to GitHub
      command: gh auth login --git-protocol https --with-token --hostname {{ github_hostname }}
      args:
        stdin: "{{ github_token }}"
    - name: Upload GPG key to GitHub
      shell: gh gpg-key add -
      args:
        stdin: "{{ gpg_public_key.stdout }}"
      environment:
        GH_HOST: "{{ github_hostname }}"
    - name: Lookup GitHub Enterprise in local git config
      shell: grep -c "{{ github_hostname }}" ~/.local/git/config || true
      register: git_config_included
    - name: Append includeIf to local git config
      when: git_config_included.stdout == "0" 
      lineinfile:
        dest: ~/.local/git/config
        line: |-
          [includeIf "gitdir:~/Projects/src/{{ github_hostname }}/"]
           	path = ~/.local/git/config.enterprise
